package org.matihost.algorithms.euler;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By
 * starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
 * the sum of the even-valued terms.
 */
public class Problem2 {

  public static int evenFibSum(int maxFibValue) {
    if (maxFibValue < 0)
      throw new IllegalArgumentException("Negative number provided as maxFibValue");
    if (maxFibValue < 2) {
      return 2;
    } else {
      int p2 = 1;
      int p1 = 2;
      int result = 2;
      int sum = 0;
      while (result <= maxFibValue) {
        if (result % 2 == 0) {
          sum += result;
        }
        result = p1 + p2;
        p2 = p1;
        p1 = result;
      }
      return sum;
    }
  }


  public static void main(String args[]) {
    int result = evenFibSum(4_000_000);
    System.out.println(result);
  }

}
