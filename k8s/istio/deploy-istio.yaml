---
- hosts: localhost
  become: false
  collections:
  - community.kubernetes
  - community.general
  vars:
    files: "{{ playbook_dir }}/files"
    internal_wildcard_cn: "*.{{ ingress_gateway.default_dns_suffix }}"
  tasks:
  - name: Get current GCP project
    shell: gcloud config get-value project
    register: gcp_project_out
    changed_when: false

  - name: Set GCP project fact
    set_fact:
      gcp_project: "{{ gcp_project_out.stdout }}"


  - name: Ensure Istio main directory present
    file:
      path: "{{ lookup('env', 'HOME') }}/.istio"
      state: directory

  - name: Check .istio/current exists
    stat:
      path: "{{ lookup('env', 'HOME') }}/.istio/current"
    register: istio_installed

  - name: Ensure Istio downloaded
    shell: |
      cd ~/.istio
      curl -sL https://istio.io/downloadIstio | sh -
      cd istio-*
      ln -s "$(pwd)" ../current
    when: not istio_installed.stat.exists

  - name: Ensure istio-system namespace present
    k8s:
      name: istio-system
      api_version: v1
      kind: Namespace
      state: present

  - name: Ensure PodSecurityPolicy present for Istio CNI Daemon Set
    k8s:
      state: present
      definition: "{{ lookup('template', '{{ files }}/psp.yaml.j2') }}"
      validate:
        fail_on_error: true
        strict: true

  - name: Ensure tcp:15017 is open on GKE nodes
    shell: |
      FIREWALL_NAME=$(gcloud compute firewall-rules list --filter="name~'{{ options.gke.cluster_name|mandatory }}-.*-master'" --format="value(name)")
      [ -z "${FIREWALL_NAME}" ] && {
        echo "Missing cluster {{ options.gke.cluster_name }} master firewall rule"
        echo "Unable to open Istio CNI port to be accessed by masters"
        echo "Either GKE has changed the firewalls or your are logged to wrong GCP project"
        exit 1
      }
      gcloud compute firewall-rules update "${FIREWALL_NAME}" --allow tcp:10250,tcp:443,tcp:15017
    when: options.gke_mode|default(false)

  - name: Run Terraform to setup GCP prerequisites for Istio deployment
    terraform:
      project_path: 'files/gke'
      state: present
      workspace: "default"
      force_init: true
      variables: "{{ options.gke|mandatory
        |combine({'project': gcp_project})
        |combine({'enable_internal_ingress_node_pool': ingress_gateway.enable_node_selector|default(false)|string|lower})
        |combine({'enable_external_ingress_node_pool': (ingress_external_gateway.enable|default(false) and ingress_external_gateway.enable_node_selector|default(false))|string|lower})
      }}"
    when: options.gke_mode|default(false)

  - name: Deploy Istio Operator Helm chart
    helm:
      name: "istio-operator"
      chart_ref: "{{ lookup('env', 'HOME') }}/.istio/current/manifests/charts/istio-operator"
      release_namespace: "istio-system"
      create_namespace: false
      wait: true
      wait_timeout: "5m0s"
      values:
        hub: "{{ operator.hub }}"
        tag: "{{ operator.tag }}"


  - name: Ensure Istio ControlPlane operator configured
    k8s:
      state: present
      definition: "{{ lookup('template', '{{ files }}/control_plane.yaml.j2') }}"
      validate:
        fail_on_error: true
        strict: true

  - name: Ensure Istio IngressClass present
    k8s:
      state: present
      definition: "{{ lookup('template', '{{ files }}/ingress_class.yaml.j2') }}"
      validate:
        fail_on_error: true
        strict: true

  - name: Ensure Istio ControlPlane operator reconciliating is finished
    k8s_info:
      api_version: install.istio.io/v1alpha1
      kind: IstioOperator
      name: istiocontrolplane
      namespace: istio-system
    register: operator_status
    until: operator_status.resources[0].status is defined and operator_status.resources[0].status.status == "HEALTHY"
    retries: 36
    delay: 10
    ignore_errors: yes


  - name: Get final ControlPlane operator status
    k8s_info:
      api_version: install.istio.io/v1alpha1
      kind: IstioOperator
      name: istiocontrolplane
      namespace: istio-system
    register: operator_status

  - name: Fail when Istio Operator didn't start properly
    fail:
      msg: |
        Istio Operator didn't install Istio components properly
        Check istiooperator pod logs in istio-operator namespace
    when: operator_status.resources[0].status.status != "HEALTHY"

  - name: Ensure CN={{ internal_wildcard_cn }} TLS is present
    block:
    - name: Ensure CN={{ internal_wildcard_cn }} TLS is present
      include_role:
        name: create_certificate
      vars:
        certificate_def:
          cn: "{{ internal_wildcard_cn }}"
          tls_name: wildcard.{{ ingress_gateway.default_dns_suffix }}
    become: true
  - name: Ensure TLS Secret internal-wildcard-gateway-tls is present in namespace istio-system
    k8s:
      state: present
      definition:
        apiVersion: "v1"
        kind: Secret
        metadata:
          name: internal-wildcard-gateway-tls
          namespace: istio-system
        data:
          tls.crt: "{{ tls.crt }}"
          tls.key: "{{ tls.key }}"
        type: kubernetes.io/tls
    no_log: true

  - name: Ensure Istio internal ingress wildcard Gateway are exposed
    k8s:
      state: present
      definition: "{{ lookup('template', '{{ files }}/internal_vs_config.yaml.j2') }}"
      validate:
        fail_on_error: true
        strict: true

  - name: Ensure VirtualServices are exposed
    include_role:
      name: expose_virtual_svc
    vars:
      wildcard_dns_suffix: "{{ ingress_gateway.default_dns_suffix }}"
      vs: "{{ item }}"
    loop: "{{ ingress_gateway.virtual_services|default([]) }}"
