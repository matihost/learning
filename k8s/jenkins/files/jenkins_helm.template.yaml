---
# Default values for jenkinsci/jenkins chart:
# helm show values jenkinsci/jenkins
namespaceOverride: ci

master:
  image: "mirror.gcr.io/jenkins/jenkins"
  tag: "lts"

  servicePort: 80
  serviceType: {{ jenkins_service_type|default("NodePort") }}

  ingress:
    enabled: true
    apiVersion: "networking.k8s.io/v1beta1"
    hostName: {{ jenkins_ingress }}
    tls:
    - secretName: {{ jenkins_ingress }}
      hosts:
      - {{ jenkins_ingress }}

  installPlugins:
  - kubernetes:1.27.0
  - workflow-job:2.39
  - workflow-aggregator:2.6
  - credentials-binding:1.23
  - git:4.4.1
  - configuration-as-code:1.43
  - timestamper:1.11.5
  - github-branch-source:2.9.0
  - matrix-auth:2.6.2
  - prometheus:2.0.7
  - simple-theme-plugin:0.6

  initializeOnce: true

  resources:
    requests:
      cpu: "50m"
      memory: "256Mi"
    limits:
      cpu: "{{ jenkins_max_cpu|default('2000m') }}"
      memory: "{{ jenkins_max_memory|default('2Gi') }}"

  enableXmlConfig: true
  securityRealm: |-
    <securityRealm class="hudson.security.HudsonPrivateSecurityRealm">
      <disableSignup>true</disableSignup>
      <enableCaptcha>false</enableCaptcha>
    </securityRealm>

  scriptApproval:
  - "method groovy.json.JsonSlurperClassic parseText java.lang.String"
  - "new groovy.json.JsonSlurperClassic"

  initScripts:
  - |
    import jenkins.model.*
    import hudson.security.*
    def instance = Jenkins.getInstance()
    def hudsonRealm = new HudsonPrivateSecurityRealm(false)
    if (!hudsonRealm.getUser("admin")){
      hudsonRealm.createAccount("{{ jenkins_admin_username|default('admin') }}", "{{ jenkins_admin_pass|mandatory }}")
    }
    instance.save()

  JCasC:
    enabled: true
    defaultConfig: true
    configScripts:
      welcome-message: |
        jenkins:
          systemMessage: Welcome to the Matihost CI\CD server.
      neo-theme: |
        unclassified:
          simple-theme-plugin:
            elements:
              - cssUrl:
                  url: "https://tobix.github.io/jenkins-neo2-theme/dist/neo-light.css"

agent:
  image: "mirror.gcr.io/jenkins/inbound-agent"
  tag: "4.3-4"
  resources:
    requests:
      cpu: "50m"
      memory: "64Mi"
    limits:
      cpu: "{{ jenkins_agent_max_cpu|default('2') }}"
      memory: "{{ jenkins_agent_max_memory|default('1Gi') }}"
